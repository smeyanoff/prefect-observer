// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/prefectV2/{deployment_id}/parameters": {
            "get": {
                "description": "Get parameters of a stage by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stage Info"
                ],
                "summary": "Get stage parameters",
                "operationId": "GetStageParameters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deployment ID",
                        "name": "deployment_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sendposts": {
            "get": {
                "description": "Get sendposts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sendpost"
                ],
                "summary": "Get a sendposts",
                "operationId": "GetSendposts",
                "responses": {
                    "200": {
                        "description": "Successfully get",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Sendpost"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new sendpost with the specified parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sendpost"
                ],
                "summary": "Create a sendpost",
                "operationId": "CreateSendpost",
                "parameters": [
                    {
                        "description": "Sendpost creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.Senpost"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created",
                        "schema": {
                            "$ref": "#/definitions/responses.Sendpost"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sendposts/{sendpost_id}": {
            "get": {
                "description": "Get a sendpost with provided sendpost id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sendpost"
                ],
                "summary": "Get a sendpost",
                "operationId": "GetSendpost",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Sendpost ID",
                        "name": "sendpost_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully get",
                        "schema": {
                            "$ref": "#/definitions/responses.Sendpost"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Copies a sendpost by its ID",
                "tags": [
                    "Sendpost"
                ],
                "summary": "Copy a sendpost",
                "operationId": "CopySendpost",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Sendpost ID",
                        "name": "sendpost_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Sendpost creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.Senpost"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully copied",
                        "schema": {
                            "$ref": "#/definitions/responses.Sendpost"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a sendpost by its ID along with all associated stages",
                "tags": [
                    "Sendpost"
                ],
                "summary": "Delete a sendpost",
                "operationId": "DeleteSendpost",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Sendpost ID",
                        "name": "sendpost_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sendposts/{sendpost_id}/parameters": {
            "post": {
                "description": "Add or update sendpost parameters by its ID",
                "tags": [
                    "Sendpost"
                ],
                "summary": "Add or update sendpost parameters",
                "operationId": "AddUpdateSendpostParameters",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Sendpost ID",
                        "name": "sendpost_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Sendpost parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.Parameters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully added or updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sendposts/{sendpost_id}/parameters/{key}": {
            "delete": {
                "description": "Delete sendpost parameter by its ID and key",
                "tags": [
                    "Sendpost"
                ],
                "summary": "Delete sendpost parameter",
                "operationId": "DeleteSendpostParameter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Sendpost ID",
                        "name": "sendpost_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Parameter key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid ID or key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sendposts/{sendpost_id}/run": {
            "post": {
                "description": "Start the sendpost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sendpost Runner"
                ],
                "summary": "Start the sendpost",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Sendpost ID",
                        "name": "sendpost_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sendposts/{sendpost_id}/run/ws": {
            "get": {
                "description": "Establishes a WebSocket connection to receive status updates on sendpost execution.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Connect to WebSocket notifications for sendpost execution",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Sendpost ID",
                        "name": "sendpost_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "101": {
                        "description": "Switching Protocols",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/sendposts/{sendpost_id}/stages": {
            "get": {
                "description": "Get all stages of a sendpost by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stage"
                ],
                "summary": "Get stages of a sendpost",
                "operationId": "GetSendpostStages",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Sendpost ID",
                        "name": "sendpost_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved stages",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Stage"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a new stage to the specified sendpost.\nIf ` + "`" + `previous_stage_id` + "`" + ` is provided adds stage after.\nIf field ` + "`" + `next_stage_id` + "`" + ` in the previous_stage is not null changes ` + "`" + `next_stage_id` + "`" + ` in previous_stage on the new provided stage id.\nAt the same time writes the new provided stage ` + "`" + `next_stage_id` + "`" + ` with previous_stage ` + "`" + `next_stage_id` + "`" + ` a.k.a this method allows insert stage between two stages.\nField ` + "`" + `type` + "`" + ` could be ` + "`" + `PARALLEL|SEQUENTIAL|OBSERVER` + "`" + `.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stage"
                ],
                "summary": "Add a stage to a sendpost",
                "operationId": "AddStageToSendpost",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Sendpost ID",
                        "name": "sendpost_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Stage creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.Stage"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully added stage",
                        "schema": {
                            "$ref": "#/definitions/responses.Stage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sendposts/{sendpost_id}/stages/{stage_id}": {
            "get": {
                "description": "Get detailed information about a stage by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stage"
                ],
                "summary": "Get stage detailed info",
                "operationId": "GetStageDetailedInfo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Sendpost ID",
                        "name": "sendpost_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Stage ID",
                        "name": "stage_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved stage",
                        "schema": {
                            "$ref": "#/definitions/responses.StageDetailed"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update parameters of a stage by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stage"
                ],
                "summary": "Update stage parameters",
                "operationId": "UpdateStageParameters",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Sendpost ID",
                        "name": "sendpost_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Stage ID",
                        "name": "stage_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Parameters",
                        "name": "parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.Parameters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a stage by its ID. If the stage is linked to other stages, they will be updated accordingly.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stage"
                ],
                "summary": "Delete a stage",
                "operationId": "DeleteStage",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Sendpost ID",
                        "name": "sendpost_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Stage ID",
                        "name": "stage_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Block or unblock a stage by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stage"
                ],
                "summary": "Block/Unblock a stage",
                "operationId": "BlockUnblockStage",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Sendpost ID",
                        "name": "sendpost_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Stage ID",
                        "name": "stage_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully blocked/unblocked",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sendposts/{sendpost_id}/stages/{stage_id}/sub-stages": {
            "get": {
                "description": "Retrieves the sub-stages of the specified stage.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stage"
                ],
                "summary": "Get parallel stage sub-stages",
                "operationId": "GetSubStages",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Sendpost ID",
                        "name": "sendpost_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Stage ID",
                        "name": "stage_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved stages",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Stage"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a sub-stage to an existing parent stage.\nThe sub-stage will be linked to the parent and can have deployment parameters.\nCould only add sub-stage to PARALLEL stage type.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stage"
                ],
                "summary": "Add a sub-stage to a parent stage",
                "operationId": "AddSubStage",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Sendpost ID",
                        "name": "sendpost_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Stage ID",
                        "name": "stage_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Sub-stage creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.Stage"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully added sub-stage",
                        "schema": {
                            "$ref": "#/definitions/responses.Stage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "requests.Parameters": {
            "type": "object",
            "required": [
                "parameters"
            ],
            "properties": {
                "parameters": {
                    "$ref": "#/definitions/value.JSONB"
                }
            }
        },
        "requests.Senpost": {
            "type": "object",
            "required": [
                "sendpost_name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "global_parameters": {
                    "$ref": "#/definitions/value.JSONB"
                },
                "sendpost_name": {
                    "type": "string"
                }
            }
        },
        "requests.Stage": {
            "type": "object",
            "required": [
                "deployment_id",
                "type"
            ],
            "properties": {
                "deployment_id": {
                    "type": "string"
                },
                "previous_stage_id": {
                    "type": "integer"
                },
                "stage_parameters": {
                    "$ref": "#/definitions/value.JSONB"
                },
                "type": {
                    "$ref": "#/definitions/value.StageType"
                }
            }
        },
        "responses.Sendpost": {
            "type": "object",
            "required": [
                "id",
                "name",
                "state"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "global_parameters": {
                    "$ref": "#/definitions/value.JSONB"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "responses.Stage": {
            "type": "object",
            "required": [
                "id",
                "is_blocked",
                "state",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "is_blocked": {
                    "type": "boolean"
                },
                "state": {
                    "$ref": "#/definitions/value.StateType"
                },
                "type": {
                    "$ref": "#/definitions/value.StageType"
                }
            }
        },
        "responses.StageDetailed": {
            "type": "object",
            "required": [
                "deployment_id",
                "id",
                "state",
                "type"
            ],
            "properties": {
                "deployment_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "parent_stage_id": {
                    "type": "integer"
                },
                "stage_parameters": {
                    "$ref": "#/definitions/value.JSONB"
                },
                "state": {
                    "$ref": "#/definitions/value.StateType"
                },
                "type": {
                    "$ref": "#/definitions/value.StageType"
                }
            }
        },
        "value.JSONB": {
            "type": "object",
            "additionalProperties": true
        },
        "value.StageType": {
            "type": "string",
            "enum": [
                "PARALLEL",
                "SEQUENTIAL",
                "OBSERVER"
            ],
            "x-enum-varnames": [
                "ParallelStage",
                "SequentialStage",
                "ObserverStage"
            ]
        },
        "value.StateType": {
            "type": "string",
            "enum": [
                "SCHEDULED",
                "PENDING",
                "RUNNING",
                "COMPLETED",
                "FAILED",
                "CANCELLED",
                "CRASHED",
                "PAUSED",
                "CANCELLING",
                "NEVERRUNNING",
                "UPDATED"
            ],
            "x-enum-varnames": [
                "Scheduled",
                "Pending",
                "Running",
                "Completed",
                "Failed",
                "Cancelled",
                "Crashed",
                "Paused",
                "Cancelling",
                "NeverRunning",
                "Updated"
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.2",
	Host:             "localhost:8180",
	BasePath:         "/v1",
	Schemes:          []string{"http"},
	Title:            "OBSERVER backend",
	Description:      "This is a backend for OBSERVER app.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
